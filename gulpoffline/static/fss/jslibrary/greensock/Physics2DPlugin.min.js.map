{"version":3,"file":"Physics2DPlugin.min.js","sources":["../src/Physics2DPlugin.js"],"sourcesContent":["/*!\n * Physics2DPlugin 3.1.1\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet gsap, _coreInitted, _getUnit,\n\t_DEG2RAD = Math.PI / 180,\n\t_getGSAP = () => gsap || (typeof(window) !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap),\n\t_round = value => Math.round(value * 10000) / 10000,\n\t_bonusValidated = 1, //<name>Physics2DPlugin</name>\n\t_initCore = core => {\n\t\tgsap = core || _getGSAP();\n\t\tif (!_coreInitted) {\n\t\t\t_getUnit = gsap.utils.getUnit;\n\t\t\t_coreInitted = 1;\n\t\t}\n\t};\n\nclass PhysicsProp {\n\n\tconstructor(target, p, velocity, acceleration, stepsPerTimeUnit) {\n\t\tlet cache = target._gsap,\n\t\t\tcurVal = cache.get(target, p);\n\t\tthis.p = p;\n\t\tthis.set = cache.set(target, p); //setter\n\t\tthis.s = this.val = parseFloat(curVal);\n\t\tthis.u = _getUnit(curVal) || 0;\n\t\tthis.vel = velocity || 0;\n\t\tthis.v = this.vel / stepsPerTimeUnit;\n\t\tif (acceleration || acceleration === 0) {\n\t\t\tthis.acc = acceleration;\n\t\t\tthis.a = this.acc / (stepsPerTimeUnit * stepsPerTimeUnit);\n\t\t} else {\n\t\t\tthis.acc = this.a = 0;\n\t\t}\n\t}\n\n}\n\n\nexport const Physics2DPlugin = {\n\tversion:\"3.1.1\",\n\tname:\"physics2D\",\n\tregister: _initCore,\n\tinit(target, value, tween) {\n\t\tif (!_coreInitted) {\n\t\t\t_initCore();\n\t\t}\n\t\tlet data = this,\n\t\t\tangle = +value.angle || 0,\n\t\t\tvelocity = +value.velocity || 0,\n\t\t\tacceleration = +value.acceleration || 0,\n\t\t\txProp = value.xProp || \"x\",\n\t\t\tyProp = value.yProp || \"y\",\n\t\t\taAngle = (value.accelerationAngle || value.accelerationAngle === 0) ? +value.accelerationAngle : angle;\n\t\tdata.target = target;\n\t\tdata.tween = tween;\n\t\tdata.step = 0;\n\t\tdata.sps = 30; //steps per second\n\t\tif (value.gravity) {\n\t\t\tacceleration = +value.gravity;\n\t\t\taAngle = 90;\n\t\t}\n\t\tangle *= _DEG2RAD;\n\t\taAngle *= _DEG2RAD;\n\t\tdata.fr = 1 - (+value.friction || 0);\n\t\tdata._props.push(xProp, yProp);\n\n\t\tdata.xp = new PhysicsProp(target, xProp, Math.cos(angle) * velocity, Math.cos(aAngle) * acceleration, data.sps);\n\t\tdata.yp = new PhysicsProp(target, yProp, Math.sin(angle) * velocity, Math.sin(aAngle) * acceleration, data.sps);\n\t\tdata.skipX = data.skipY = 0;\n\t},\n\trender(ratio, data) {\n\t\tlet { xp, yp, tween, target, step, sps, fr, skipX, skipY } = data,\n\t\t\ttime = tween._from ? tween._dur - tween._time : tween._time,\n\t\t\tx, y, tt, steps, remainder, i;\n\t\tif (data.fr === 1) {\n\t\t\ttt = time * time * 0.5;\n\t\t\tx = xp.s + ((xp.vel * time) + (xp.acc * tt));\n\t\t\ty = yp.s + ((yp.vel * time) + (yp.acc * tt));\n\t\t} else {\n\t\t\ttime *= sps;\n\t\t\tsteps = i = (time | 0) - step;\n\t\t\tremainder = (time % 1);\n\t\t\tif (i >= 0) { \t//going forward\n\t\t\t\twhile (i--) {\n\t\t\t\t\txp.v += xp.a;\n\t\t\t\t\typ.v += yp.a;\n\t\t\t\t\txp.v *= fr;\n\t\t\t\t\typ.v *= fr;\n\t\t\t\t\txp.val += xp.v;\n\t\t\t\t\typ.val += yp.v;\n\t\t\t\t}\n\n\t\t\t} else { \t\t//going backwards\n\t\t\t\ti = -i;\n\t\t\t\twhile (i--) {\n\t\t\t\t\txp.val -= xp.v;\n\t\t\t\t\typ.val -= yp.v;\n\t\t\t\t\txp.v /= fr;\n\t\t\t\t\typ.v /= fr;\n\t\t\t\t\txp.v -= xp.a;\n\t\t\t\t\typ.v -= yp.a;\n\t\t\t\t}\n\t\t\t}\n\t\t\tx = xp.val + (xp.v * remainder);\n\t\t\ty = yp.val + (yp.v * remainder);\n\t\t\tdata.step += steps;\n\t\t}\n\t\tif (!skipX) {\n\t\t\txp.set(target, xp.p, _round(x) + xp.u);\n\t\t}\n\t\tif (!skipY) {\n\t\t\typ.set(target, yp.p, _round(y) + yp.u);\n\t\t}\n\t},\n\tkill(property) {\n\t\tif (this.xp.p === property) {\n\t\t\tthis.skipX = 1;\n\t\t}\n\t\tif (this.yp.p === property) {\n\t\t\tthis.skipY = 1;\n\t\t}\n\t}\n};\n\n\n_getGSAP() && gsap.registerPlugin(Physics2DPlugin);\n\nexport { Physics2DPlugin as default };"],"names":["_getGSAP","gsap","window","registerPlugin","_round","value","Math","round","_bonusValidated","core","_coreInitted","_getUnit","utils","getUnit","PhysicsProp","target","p","velocity","acceleration","stepsPerTimeUnit","cache","_gsap","curVal","get","set","s","this","val","parseFloat","u","vel","v","acc","a","_DEG2RAD","PI","Physics2DPlugin","version","name","register","_initCore","init","tween","data","angle","xProp","yProp","aAngle","accelerationAngle","step","sps","gravity","fr","friction","_props","push","xp","cos","yp","sin","skipX","skipY","render","ratio","x","y","tt","steps","remainder","i","time","_from","_dur","_time","kill","property"],"mappings":"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"}